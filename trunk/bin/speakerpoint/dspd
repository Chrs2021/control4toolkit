#!/usr/bin/perl -I../../lib

use warnings;
use strict;
use Getopt::Std;
use IO::Socket;
use IO::Select;
use C4Toolkit;
use SpeakerPoint::AudioControl;
use SpeakerPoint::Interface;
use SpeakerPoint::Control;
use SpeakerPoint::UDPControl;
use SpeakerPoint::StreamServer;
use Data::Dumper;

my %Options;
my $buffersize = 256;
getopt('h?dvB', \%Options);

if (exists $Options{'h'} && exists $Options{'v'}) {
	err("Please dont use verbose and daemonize in the same setting?");
}

if (exists $Options{'B'}) {
	$buffersize = $Options{'B'};
}

if (exists $Options{'v'}) {
	$dbg = 1;
}

dbg("Starting");

if (exists $Options{'h'} || exists $Options{'?'}) {
	print 'DSPd v0.1

Usage
	dspd [options]

Options available

	-B <size>	Buffersize (default: 256)
	-d		Daemonize
	-v		Verbose/Debug
	-h		Show this help

Exiting.
';
	exit(1);
}

# Fork if we are supposed to

if (exists $Options{'d'}) {
	print "Daemonizing discoverd..\n";
	exit if fork;
}

# Change our process name to something pretty
$0 = "dspd";

# Fetch our device id from our toolkit.
our $device_id = C4Toolkit::DeviceID();

dbg("Our DeviceID is $device_id");

our $Select = new IO::Select;

dbg("Adding handles to IO::Select");
# Add our sockets to the IO::Select
$Select->add(SpeakerPoint::Interface::listen());
$Select->add(SpeakerPoint::Control::listen());
$Select->add(SpeakerPoint::UDPControl::listen());
$Select->add(SpeakerPoint::StreamServer::listen($buffersize));

dbg("Entering mainloop");

SpeakerPoint::AudioControl::reset();

while(1) {

	while(my @ready = $Select->can_read(1)) {

		foreach my $Handle (@ready) {

			# TCP
			TcpHandle(SpeakerPoint::Interface::checkSocket($Handle),$Handle);
			TcpHandle(SpeakerPoint::Control::checkSocket($Handle),$Handle);

			# UDP
			SpeakerPoint::StreamServer::checkSocket($Handle);
			SpeakerPoint::UDPControl::checkSocket($Handle);

		}
		dbg("Checkreset");
		SpeakerPoint::StreamServer::checkReset();
	}
}

sub TcpHandle {
	my ($tcp,$Handle) = @_;
	if (defined $tcp && $tcp == -1) {
		$Select->remove($Handle);
	}
	elsif (defined $tcp && $tcp) {
		$Select->add($tcp)
	}
}

