#!/usr/bin/perl -I..

use warnings;
use strict;
use Data::Dumper;
use IO::Socket;
use IO::Select;
use C4Toolkit;

# Fetch device id
my $DEVICEID = C4Toolkit::DeviceID();

my $Listen = new IO::Socket::INET(
        Listen => 1,
        LocalPort => 6000,
        Reuse => 1
);
my $Control = new IO::Socket::INET(
	Proto => 'udp',
        LocalPort => 6001,
);
my $Audio = new IO::Socket::INET(
	Proto => 'udp',
        LocalPort => 6200,
);

open(DSP,">/tmp/soundfile");
binmode(DSP);
binmode($Audio);
my %Channels = ();

our $Select = new IO::Select;

$Select->add($Listen);
$Select->add($Control);
$Select->add($Audio);

my %c = ();

while(1) {

print "loop\n";

while(my @ready = $Select->can_read(2)) {
        foreach my $Handle (@ready) {

            if ($Handle == $Listen) {
		print "TCP INCOMING 6000\n";
                my $new = $Listen->accept;
                $Select->add($new);
            } 
	    elsif ($Handle == $Audio) {

		my $Command = "";
	        my $sock_addr = recv( $Handle, $Command, 2048, 0 );

		if (length($Command) != 9) {
			print "SND\n";		
			print DSP $Command;
		} else {
			print "CTRL\n";		
		}

	    }
	
	    else {

			my $Command = "";
		        my $sock_addr = recv( $Handle, $Command, 1024, 0 );
	
                        $Command =~ s/[\n\r]//sgi;
	
                        if ($Command =~ /^(\d+) (.+)/) {

				my $serial = $1;
				my $cmd = $2;

	print "IN###################\n";
	print Dumper \$c{$Handle};
	print "------------\n";	
	print "$Command\n";
	print "------------\n\n";


                                if ($cmd =~ /reset/i) {
					print "Bah\n";
                                        se($Handle, "$serial OK reset");
                                }

				elsif ($cmd =~ /^setmut /i) {
	                                se($Handle, "$serial OK SETMUT");
				}

				elsif ($cmd =~ /^getmut (\d+)/i) {
	                                se($Handle, "$serial getmut OFF\r\n$serial OK getmut");
				}

				elsif ($cmd =~ /^getvol (\d+)/i) {
	                                se($Handle, "$serial getvol $1 100 100\r\n$serial OK getvol");
				}

				elsif ($cmd =~ /^addch (\d+) ([^ ]+)/i) {
	                                se($Handle, "$serial addch Port or device already open\r\n$serial NO addch 6200\r\n");
					
				}

                        }


            }
        }
}
}
sub se {
        my $fh = shift;
        my $pkg = shift;
	
	print "OUT##################\n";
	print Dumper \$c{$fh};
	print "------------\n";	
	print "$pkg\n";
	print "------------\n\n";

        print $fh $pkg."\r\n";
        return 1;
}


